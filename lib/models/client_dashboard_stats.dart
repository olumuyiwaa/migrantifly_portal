import 'class_applications.dart';

class DashboardData { final List<Application> applications; final List<dynamic> upcomingDeadlines; final List<Payment> recentPayments; final DashboardSummary summary; DashboardData({ required this.applications, required this.upcomingDeadlines, required this.recentPayments, required this.summary, }); factory DashboardData.fromJson(Map<String, dynamic> json) { return DashboardData( applications: (json['applications'] as List) .map((app) => Application.fromJson(app)) .toList(), upcomingDeadlines: json['upcomingDeadlines'] as List, recentPayments: (json['recentPayments'] as List) .map((payment) => Payment.fromJson(payment)) .toList(), summary: DashboardSummary.fromJson(json['summary']), ); } Map<String, dynamic> toJson() { return { 'applications': applications.map((app) => app.toJson()).toList(), 'upcomingDeadlines': upcomingDeadlines, 'recentPayments': recentPayments.map((payment) => payment.toJson()).toList(), 'summary': summary.toJson(), }; } } class Payment { final String id; final String clientId; final String applicationId; final double amount; final String currency; final String type; final String status; final String paymentMethod; final String invoiceNumber; final String? invoiceUrl; final DateTime createdAt; Payment({ required this.id, required this.clientId, required this.applicationId, required this.amount, required this.currency, required this.type, required this.status, required this.paymentMethod, required this.invoiceNumber, this.invoiceUrl, required this.createdAt, }); factory Payment.fromJson(Map<String, dynamic> json) { return Payment( id: json['_id'], clientId: json['clientId'], applicationId: json['applicationId'], amount: json['amount'].toDouble(), currency: json['currency'], type: json['type'], status: json['status'], paymentMethod: json['paymentMethod'], invoiceNumber: json['invoiceNumber'], invoiceUrl: json['invoiceUrl'], createdAt: DateTime.parse(json['createdAt']), ); } Map<String, dynamic> toJson() { return { '_id': id, 'clientId': clientId, 'applicationId': applicationId, 'amount': amount, 'currency': currency, 'type': type, 'status': status, 'paymentMethod': paymentMethod, 'invoiceNumber': invoiceNumber, 'invoiceUrl': invoiceUrl, 'createdAt': createdAt.toIso8601String(), }; } String get formattedAmount => '$currency \$${amount.toStringAsFixed(2)}'; String get formattedType => type[0].toUpperCase() + type.substring(1); } class DashboardSummary { final int totalApplications; final int activeApplications; final int unreadNotifications; final int pendingDeadlines; DashboardSummary({ required this.totalApplications, required this.activeApplications, required this.unreadNotifications, required this.pendingDeadlines, }); factory DashboardSummary.fromJson(Map<String, dynamic> json) { return DashboardSummary( totalApplications: json['totalApplications'], activeApplications: json['activeApplications'], unreadNotifications: json['unreadNotifications'], pendingDeadlines: json['pendingDeadlines'], ); } Map<String, dynamic> toJson() { return { 'totalApplications': totalApplications, 'activeApplications': activeApplications, 'unreadNotifications': unreadNotifications, 'pendingDeadlines': pendingDeadlines, }; } }